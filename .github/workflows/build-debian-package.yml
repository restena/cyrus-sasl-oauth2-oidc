name: Build Debian Package

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-debian-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        debian_version: [trixie]
        arch: [amd64, arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Debian package
      run: |
        docker buildx build \
          --platform linux/${{ matrix.arch }} \
          --target packages \
          --tag cyrus-sasl-oauth2-oidc:${{ matrix.debian_version }}-${{ matrix.arch }} \
          --file Dockerfile.build \
          --load \
          .

    - name: Extract packages from Docker
      run: |
        # Create output directory
        mkdir -p packages
        
        # Extract packages from Docker image
        docker create --name temp-container-${{ matrix.arch }} cyrus-sasl-oauth2-oidc:${{ matrix.debian_version }}-${{ matrix.arch }}
        docker cp temp-container-${{ matrix.arch }}:/packages/ ./
        docker rm temp-container-${{ matrix.arch }}
        
        # List generated packages
        ls -la packages/

    - name: Validate packages with lintian
      run: |
        docker run --rm \
          -v $(pwd)/packages:/packages \
          debian:${{ matrix.debian_version }}-slim \
          bash -c "
            apt-get update && apt-get install -y lintian
            cd /packages
            for deb in *.deb; do
              echo '=== Validating \$deb ==='
              lintian --no-tag-display-limit \$deb || true
            done
          "

    - name: Test package installation
      run: |
        docker buildx build \
          --platform linux/${{ matrix.arch }} \
          --target test \
          --tag cyrus-sasl-oauth2-oidc-test:${{ matrix.debian_version }}-${{ matrix.arch }} \
          --file Dockerfile.build \
          --load \
          .
        
        # Verify the plugin is properly installed
        docker run --rm cyrus-sasl-oauth2-oidc-test:${{ matrix.debian_version }}-${{ matrix.arch }} \
          bash -c "ls -la /usr/lib/*/sasl2/liboauth2.so"

    - name: Upload packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: debian-packages-${{ matrix.debian_version }}-${{ matrix.arch }}
        path: packages/
        retention-days: 30

    - name: Create release assets (on tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: packages/*.deb
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        debian_version: [trixie, bookworm]
        arch: [amd64, arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build multi-arch package
      run: |
        docker buildx build \
          --platform linux/${{ matrix.arch }} \
          --target packages \
          --tag cyrus-sasl-oauth2-oidc:${{ matrix.debian_version }}-${{ matrix.arch }} \
          --file Dockerfile.build \
          --load \
          .

    - name: Extract and upload multi-arch packages
      run: |
        mkdir -p packages-${{ matrix.arch }}
        docker create --name temp-container-${{ matrix.arch }} cyrus-sasl-oauth2-oidc:${{ matrix.debian_version }}-${{ matrix.arch }}
        docker cp temp-container-${{ matrix.arch }}:/packages/ ./packages-${{ matrix.arch }}/
        docker rm temp-container-${{ matrix.arch }}

    - name: Upload multi-arch packages
      uses: actions/upload-artifact@v4
      with:
        name: debian-packages-${{ matrix.debian_version }}-${{ matrix.arch }}
        path: packages-${{ matrix.arch }}/packages/
        retention-days: 30
